# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Swift

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: macos-latest
    env:
      PEXELS_API_KEY: ${{ secrets.PEXELS_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: swift build -v
      - name: Run tests
        run: swift test -v
      - name: Generate documentation
        run: |
          swift package --allow-writing-to-directory ./docs \
            generate-documentation --target Pexels \
            --disable-indexing \
            --transform-for-static-hosting \
            --hosting-base-path pexels-swift \
            --output-path ./docs
  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
